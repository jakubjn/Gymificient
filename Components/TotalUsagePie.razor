@inject MachineService machineService;

@inject AuthenticationStateProvider authStateProvider;
@inject NavigationManager navManager;

@namespace GymSystem.Components

<MudPaper Class="pa-3 d-flex flex-column justify-center align-center" Style="height: 45vh; width: 100%">
    @if(machines is not null)
    {
        <MudChart
            ChartType="MudBlazor.ChartType.Pie"
            ChartSeries="@(new List<ChartSeries>())"
            Height="100%">
        </MudChart>
    } else
    {
        <div class="spinner-border align-self-center justify-self-center" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }
</MudPaper>

@code {
    private List<Machine> machines = new List<Machine>();

    protected override async Task OnInitializedAsync()
    {
        AuthorisationService authService = (AuthorisationService)authStateProvider;

        UserSession userSession = await authService.GetUserSessionAsync();

        if (userSession == null || userSession.UserName == "Guest")
        {
            navManager.NavigateTo("login", true);
            return;
        }
    }
}