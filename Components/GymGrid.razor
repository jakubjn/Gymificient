@* @namespace GymSystem.Components

@inject MachineService machineService;
@inject NavigationManager navManager;
@inject AuthenticationStateProvider authStateProvider;

@if (machines is null)
{
    <div class="d-flex justify-center align-center">
        <div class="spinner-border align-self-center justify-self-center" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <MudGrid Justify="@Justify.Center">
        @foreach (Machine machine in machines)
        {
            <MudItem>
                <GymDisplay machineData="@machine" OnClick="@((Machine data) => OnClick(data))" />
            </MudItem>
        }
    </MudGrid>
}

@code {
    public List<Machine>? machines;

    protected override async Task OnInitializedAsync()
    {
        AuthorisationService authService = (AuthorisationService)authStateProvider;

        UserSession userSession = await authService.GetUserSessionAsync();

        if (userSession == null || userSession.UserName == "Guest")
        {
            navManager.NavigateTo("login", true);
            return;
        }

        machines = await machineService.GetMachinesAsync(userSession.OrgId);
    }

    public void OnClick(Machine data)
    {
        navManager.NavigateTo("dashboard/" + data.machineName);
    } *@
}
