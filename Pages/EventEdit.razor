@* @page "/dashboard/July/{dayNumber:int}"

@inject MachineService machineService;
@inject NavigationManager navManager;
@inject EventService eventService;

@inject AuthenticationStateProvider authStateProvider;

@using DataAccess.Data;

@if(machines is null)
{
    <div class="d-flex justify-center align-center">
        <div class="spinner-border align-self-center justify-self-center" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
} else
{
    <div class=" d-flex align-center justify-center pa-3" style="width:100%; height: 100%">
        <MudPaper Class="d-flex flex-column justify-start pa-3 mud-height-full" Style="width: 50%">
            <div class="align-self-center" style="height: 20%">
                <MudText Typo="Typo.h2">New Event</MudText>
            </div>

            <MudForm @ref="form" Class="pa-3 d-flex flex-column align-start justify-content-between align-self-start" Style="width: 100%; height: 65%" Model="@newEvent">
                <MudDatePicker Required="true" @bind-Date="newEvent.date" Label="Date" Class="mud-width-full"/>

                <div style="margin-bottom: 5vmin" class="d-inline-flex mud-width-full flex-row justify-content-between align-center">
                    <MudSelect Required="true" @bind-Value="newEvent.machine" T="Machine" Label="Machine">
                        @foreach (Machine machine in machines)
                        {
                            <MudSelectItem Value="@machine">@machine.machineName</MudSelectItem>
                        }
                    </MudSelect>

                    <MudSelect Required="true" Label="Event Type" @bind-Value="newEvent.eventType" T="ActionType">
                        <MudSelectItem Value="@ActionType.Service" />
                        <MudSelectItem Value="@ActionType.Inspection" />
                        <MudSelectItem Value="@ActionType.Repair" />
                    </MudSelect>
                </div>

                <MudTextField Variant="Variant.Filled" Label=" Information" @bind-Value="newEvent.info" Lines="7" AutoGrow FullWidth />
            </MudForm>

            <div class="pa-3" style="height: 15%">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="true" FullWidth @onclick="Submit">Save</MudButton>
            </div>

        </MudPaper>
    </div>
}

@code {
    [Parameter]
    public int dayNumber { get; set; }

    private EventData newEvent = new EventData();

    private List<Machine>? machines;

    private MudForm form;

    protected override async Task OnInitializedAsync()
    {
        AuthorisationService authService = (AuthorisationService)authStateProvider;

        UserSession userSession = await authService.GetUserSessionAsync();

        if (userSession == null || userSession.UserName == "Guest")
        {
            navManager.NavigateTo("login", true);
            return;
        }

        machines = await machineService.GetMachinesAsync(userSession.OrgId);
    }

    private async Task Submit()
    {
        await form.Validate();

        if(form.IsValid)
        {
            await eventService.NewEventAsync(newEvent);
            navManager.NavigateTo("/dashboard");
        }
    }
}
 *@