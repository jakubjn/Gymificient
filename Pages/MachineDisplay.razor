@page "/dashboard/{machineName}"

@inject NavigationManager navManager
@inject MachineService machineService;

<div class="card-header" style="height: fit-content;">
    <h1 class="text-center" style="justify-self: center;"><strong>@machine.machineName</strong></h1>
</div>

<div class="d-lg-inline-flex stat-image-display p-lg-5">
    <MudPaper class="p-5 pa-4" Height="100%" Width="50%">
        <div class="stat-child">
             <span>Last Serviced:</span>
             <span>Next Service:</span>
             <span>Warranty:</span>
        </div>
    </MudPaper>

    <div class="stat-child">
         <img class="rounded-3" style="width:100%; height: 100%" src="https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimages.esellerpro.com%2F2347%2FI%2F948%2F88%2FMan-Performing-Bench-Press-on-Mirafit-M1-Adjustable-Folding-Weight-Bench-with-Dip-Station.jpg&f=1&nofb=1&ipt=ef8111c2ea77d3337890bdb7674ae6d24550249b2a8f476f08c602b8de3b1e12&ipo=images" />
    </div>
</div>

<MudPaper Class="m-5 pa-4 d-flex justify-center align-center" style="width: 90%; height: 40vw">
    <div style="width: 80%; height:80%">
        <MudChart ChartType="ChartType.Bar" XAxisLabels="@XLabels" ChartSeries="@series" Width="100%" Height="100%"></MudChart>
    </div>
</MudPaper>

<MudTable Class="m-5 pa-4" Items="@problems" Hover="true" Breakpoint="MudBlazor.Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Date</MudTh>
        <MudTh>Problem</MudTh>
        <MudButton>New Problem</MudButton>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Date">@context.Date</MudTd>
        <MudTd DataLabel="Sign">@context.Problem</MudTd>
    </RowTemplate>
</MudTable>


@code {
    [Parameter]
    public string? machineName { get; set; }

    public List<MachineProblem> problems = new List<MachineProblem>()
    {
        new MachineProblem()
        {
            Date = DateTime.Today,
            Problem = "Fatass sat on machine and broke it"
        },

        new MachineProblem()
        {
            Date = DateTime.Today,
            Problem = "New Member tried to use rowing machine to hit legs"
        }
    };

    private Machine? machine;

    public List<ChartSeries> series;

    public string[] XLabels = { "10am", "12pm", "2pm", "4pm", "6pm", "8pm", "10pm" ,"12pm"};

    protected override async Task OnParametersSetAsync()
    {
        if (machineName == null) return;

        machine = await machineService.GetMachineFromName(machineName);

        series = new List<ChartSeries>()
        {
            new ChartSeries()
            {
                Name = "Use %",
                Data = machine.utilization
            },

            new ChartSeries()
            {
                Name = "Average Total Use %",
                Data = await machineService.GetAverageUsage()
            }
        };

        base.OnParametersSet();
    }

    private void OnClick()
    {
        navManager.NavigateTo("/dashboard/" + machineName + "/problems");
    }
}
