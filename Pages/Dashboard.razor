@page "/dashboard"

@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navManager;

<AuthorizeView Roles="admin">
    <MudScrollToTop>
        <MudFab Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.ArrowCircleUp" />
    </MudScrollToTop>

    <MudTabs Centered Style="width: 100%; height:fit-content">
        <MudTabPanel Text="Dashboard" Transition="@Transition.Slide" class="" style="width: 100%; height: fit-content">
            <div class="m-3 d-flex flex-column align-center">
                <FrontAnalytics />
            </div>
        </MudTabPanel>

        <MudTabPanel Text="Machines" style="width: 100%; height: fit-content">
            <div class="m-3 d-flex flex-column align-center">
                <GymGrid />
            </div>
        </MudTabPanel>

        <MudTabPanel Text="Calendar" Transition="@Transition.Slide" style="width: 100%; height: fit-content">
            <div class="m-3 d-flex flex-column align-center">
                <Calendar />
            </div>
        </MudTabPanel>
    </MudTabs>

</AuthorizeView>

@code {
    protected override async Task OnInitializedAsync()
    {
        AuthorisationService authService = (AuthorisationService)authenticationStateProvider;

        AuthenticationState authenticationState = await authService.GetAuthenticationStateAsync();

        if (authenticationState.User.Identity is null || !authenticationState.User.Identity.IsAuthenticated)
        {
            navManager.NavigateTo("/login");
        }
    }
}
