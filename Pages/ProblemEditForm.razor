@* @page "/dashboard/{machineName}/problems"

@inject MachineService machineService;

@inject AuthenticationStateProvider authStateProvider;
@inject NavigationManager navManager;

<div class=" d-flex align-center justify-center pa-3" style="width:100%; height: 100%">
    <MudPaper Class="d-flex flex-column justify-start pa-3 mud-height-full" Style="width: 50%">
        <div class="align-self-center" style="height: 20%">
            <MudText Typo="Typo.h2">New Problem</MudText>
        </div>

        <MudForm @ref="form" Class="pa-3 d-flex flex-column align-start justify-content-between align-self-start" Style="width: 100%; height: 65%" Model="@newProblem">
            <MudDatePicker Required="true" @bind-Date="newProblem.Date" Label="Date" Class="mud-width-full" />

            <MudTextField Required="true" Variant="Variant.Filled" Label="Problem" @bind-Value="newProblem.Problem" Lines="7" AutoGrow FullWidth />
        </MudForm>

        <div class="pa-3" style="height: 15%">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="true" FullWidth @onclick="OnSubmit">Save</MudButton>
        </div>

    </MudPaper>
</div>

@code {
    [Parameter]
    public string? machineName { get; set; }

    private Machine? machine;

    MachineProblem newProblem = new MachineProblem()
    {
        Date = DateTime.Today
    };

    MudForm form;

    protected override async Task OnParametersSetAsync()
    {
        if (machineName is null) return;

        AuthorisationService authService = (AuthorisationService)authStateProvider;

        UserSession userSession = await authService.GetUserSessionAsync();

        if (userSession == null || userSession.UserName == "Guest")
        {
            navManager.NavigateTo("login", true);
            return;
        }

        machine = await machineService.GetMachineFromName(machineName, userSession.OrgId);

        if (machine is null) return;

        newProblem.machineId = machine.Id;

        await base.OnParametersSetAsync();
    }

    private async Task OnSubmit()
    {
        await form.Validate();

        if(form.IsValid)
        {
            await machineService.CreateNewProblemAsync(newProblem);
            navManager.NavigateTo("dashboard/" + machineName);
        }
    }
}
 *@